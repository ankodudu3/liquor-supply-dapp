export const idlFactory = ({ IDL }) => {
  return IDL.Service({
    'addLiquorProduct' : IDL.Func(
        [
          IDL.Record({
            'retailPrice' : IDL.Nat64,
            'alcoholContent' : IDL.Nat64,
            'liquorType' : IDL.Variant({
              'Gin' : IDL.Null,
              'Rum' : IDL.Null,
              'Brandy' : IDL.Null,
              'Tequila' : IDL.Null,
              'Whiskey' : IDL.Null,
              'Liqueur' : IDL.Null,
              'Other' : IDL.Null,
              'Vodka' : IDL.Null,
            }),
            'vintageYear' : IDL.Opt(IDL.Text),
            'expiryDate' : IDL.Opt(IDL.Text),
            'name' : IDL.Text,
            'bottleSize' : IDL.Text,
            'batchNumber' : IDL.Text,
            'brand' : IDL.Variant({
              'County' : IDL.Null,
              'JackDaniels' : IDL.Null,
              'JohnnieWalker' : IDL.Null,
              'Hennessy' : IDL.Null,
              'Patron' : IDL.Null,
              'Smirnoff' : IDL.Null,
              'Best' : IDL.Null,
              'Tanqueray' : IDL.Null,
              'Bacardi' : IDL.Null,
              'Other' : IDL.Null,
              'Chrome' : IDL.Null,
            }),
            'currentStock' : IDL.Nat64,
            'costPrice' : IDL.Nat64,
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'retailPrice' : IDL.Nat64,
              'alcoholContent' : IDL.Nat64,
              'liquorType' : IDL.Variant({
                'Gin' : IDL.Null,
                'Rum' : IDL.Null,
                'Brandy' : IDL.Null,
                'Tequila' : IDL.Null,
                'Whiskey' : IDL.Null,
                'Liqueur' : IDL.Null,
                'Other' : IDL.Null,
                'Vodka' : IDL.Null,
              }),
              'vintageYear' : IDL.Opt(IDL.Text),
              'expiryDate' : IDL.Opt(IDL.Text),
              'name' : IDL.Text,
              'bottleSize' : IDL.Text,
              'batchNumber' : IDL.Text,
              'brand' : IDL.Variant({
                'County' : IDL.Null,
                'JackDaniels' : IDL.Null,
                'JohnnieWalker' : IDL.Null,
                'Hennessy' : IDL.Null,
                'Patron' : IDL.Null,
                'Smirnoff' : IDL.Null,
                'Best' : IDL.Null,
                'Tanqueray' : IDL.Null,
                'Bacardi' : IDL.Null,
                'Other' : IDL.Null,
                'Chrome' : IDL.Null,
              }),
              'currentStock' : IDL.Nat64,
              'costPrice' : IDL.Nat64,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'adjustInventory' : IDL.Func(
        [
          IDL.Record({
            'liquorProductId' : IDL.Text,
            'staffId' : IDL.Text,
            'quantityChanged' : IDL.Nat64,
            'adjustedBy' : IDL.Text,
            'reason' : IDL.Text,
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'liquorProductId' : IDL.Text,
              'staffId' : IDL.Text,
              'adjustmentDate' : IDL.Text,
              'quantityChanged' : IDL.Nat64,
              'reason' : IDL.Text,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'deleteLiquorProduct' : IDL.Func(
        [IDL.Text],
        [
          IDL.Variant({
            'Ok' : IDL.Text,
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'deleteUser' : IDL.Func(
        [IDL.Text],
        [
          IDL.Variant({
            'Ok' : IDL.Text,
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'getAllUsers' : IDL.Func(
        [IDL.Record({ 'page' : IDL.Nat64, 'pageSize' : IDL.Nat64 })],
        [
          IDL.Variant({
            'Ok' : IDL.Vec(
              IDL.Record({
                'id' : IDL.Text,
                'contactInfo' : IDL.Text,
                'username' : IDL.Text,
                'owner' : IDL.Principal,
                'createdAt' : IDL.Text,
                'role' : IDL.Variant({
                  'Customer' : IDL.Null,
                  'Staff' : IDL.Null,
                  'Admin' : IDL.Null,
                  'Manager' : IDL.Null,
                }),
                'lastUpdated' : IDL.Text,
                'points' : IDL.Nat64,
              })
            ),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'getLiquorProduct' : IDL.Func(
        [IDL.Text],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'retailPrice' : IDL.Nat64,
              'alcoholContent' : IDL.Nat64,
              'liquorType' : IDL.Variant({
                'Gin' : IDL.Null,
                'Rum' : IDL.Null,
                'Brandy' : IDL.Null,
                'Tequila' : IDL.Null,
                'Whiskey' : IDL.Null,
                'Liqueur' : IDL.Null,
                'Other' : IDL.Null,
                'Vodka' : IDL.Null,
              }),
              'vintageYear' : IDL.Opt(IDL.Text),
              'expiryDate' : IDL.Opt(IDL.Text),
              'name' : IDL.Text,
              'bottleSize' : IDL.Text,
              'batchNumber' : IDL.Text,
              'brand' : IDL.Variant({
                'County' : IDL.Null,
                'JackDaniels' : IDL.Null,
                'JohnnieWalker' : IDL.Null,
                'Hennessy' : IDL.Null,
                'Patron' : IDL.Null,
                'Smirnoff' : IDL.Null,
                'Best' : IDL.Null,
                'Tanqueray' : IDL.Null,
                'Bacardi' : IDL.Null,
                'Other' : IDL.Null,
                'Chrome' : IDL.Null,
              }),
              'currentStock' : IDL.Nat64,
              'costPrice' : IDL.Nat64,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'getLiquorProductsByType' : IDL.Func(
        [
          IDL.Variant({
            'Gin' : IDL.Null,
            'Rum' : IDL.Null,
            'Brandy' : IDL.Null,
            'Tequila' : IDL.Null,
            'Whiskey' : IDL.Null,
            'Liqueur' : IDL.Null,
            'Other' : IDL.Null,
            'Vodka' : IDL.Null,
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Vec(
              IDL.Record({
                'id' : IDL.Text,
                'retailPrice' : IDL.Nat64,
                'alcoholContent' : IDL.Nat64,
                'liquorType' : IDL.Variant({
                  'Gin' : IDL.Null,
                  'Rum' : IDL.Null,
                  'Brandy' : IDL.Null,
                  'Tequila' : IDL.Null,
                  'Whiskey' : IDL.Null,
                  'Liqueur' : IDL.Null,
                  'Other' : IDL.Null,
                  'Vodka' : IDL.Null,
                }),
                'vintageYear' : IDL.Opt(IDL.Text),
                'expiryDate' : IDL.Opt(IDL.Text),
                'name' : IDL.Text,
                'bottleSize' : IDL.Text,
                'batchNumber' : IDL.Text,
                'brand' : IDL.Variant({
                  'County' : IDL.Null,
                  'JackDaniels' : IDL.Null,
                  'JohnnieWalker' : IDL.Null,
                  'Hennessy' : IDL.Null,
                  'Patron' : IDL.Null,
                  'Smirnoff' : IDL.Null,
                  'Best' : IDL.Null,
                  'Tanqueray' : IDL.Null,
                  'Bacardi' : IDL.Null,
                  'Other' : IDL.Null,
                  'Chrome' : IDL.Null,
                }),
                'currentStock' : IDL.Nat64,
                'costPrice' : IDL.Nat64,
              })
            ),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'getSupplyChainEvent' : IDL.Func(
        [IDL.Text],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'liquorProductId' : IDL.Text,
              'date' : IDL.Nat64,
              'participantId' : IDL.Text,
              'quantity' : IDL.Nat64,
              'location' : IDL.Text,
              'eventType' : IDL.Variant({
                'Sold' : IDL.Null,
                'Received' : IDL.Null,
                'Adjusted' : IDL.Null,
                'Damaged' : IDL.Null,
                'Expired' : IDL.Null,
              }),
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'getUser' : IDL.Func(
        [IDL.Text],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'contactInfo' : IDL.Text,
              'username' : IDL.Text,
              'owner' : IDL.Principal,
              'createdAt' : IDL.Text,
              'role' : IDL.Variant({
                'Customer' : IDL.Null,
                'Staff' : IDL.Null,
                'Admin' : IDL.Null,
                'Manager' : IDL.Null,
              }),
              'lastUpdated' : IDL.Text,
              'points' : IDL.Nat64,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'listAllInventoryAdjustments' : IDL.Func(
        [],
        [
          IDL.Variant({
            'Ok' : IDL.Vec(
              IDL.Record({
                'id' : IDL.Text,
                'liquorProductId' : IDL.Text,
                'staffId' : IDL.Text,
                'adjustmentDate' : IDL.Text,
                'quantityChanged' : IDL.Nat64,
                'reason' : IDL.Text,
              })
            ),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'listAllProducts' : IDL.Func(
        [],
        [
          IDL.Variant({
            'Ok' : IDL.Vec(
              IDL.Record({
                'id' : IDL.Text,
                'retailPrice' : IDL.Nat64,
                'alcoholContent' : IDL.Nat64,
                'liquorType' : IDL.Variant({
                  'Gin' : IDL.Null,
                  'Rum' : IDL.Null,
                  'Brandy' : IDL.Null,
                  'Tequila' : IDL.Null,
                  'Whiskey' : IDL.Null,
                  'Liqueur' : IDL.Null,
                  'Other' : IDL.Null,
                  'Vodka' : IDL.Null,
                }),
                'vintageYear' : IDL.Opt(IDL.Text),
                'expiryDate' : IDL.Opt(IDL.Text),
                'name' : IDL.Text,
                'bottleSize' : IDL.Text,
                'batchNumber' : IDL.Text,
                'brand' : IDL.Variant({
                  'County' : IDL.Null,
                  'JackDaniels' : IDL.Null,
                  'JohnnieWalker' : IDL.Null,
                  'Hennessy' : IDL.Null,
                  'Patron' : IDL.Null,
                  'Smirnoff' : IDL.Null,
                  'Best' : IDL.Null,
                  'Tanqueray' : IDL.Null,
                  'Bacardi' : IDL.Null,
                  'Other' : IDL.Null,
                  'Chrome' : IDL.Null,
                }),
                'currentStock' : IDL.Nat64,
                'costPrice' : IDL.Nat64,
              })
            ),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'listAllSales' : IDL.Func(
        [],
        [
          IDL.Variant({
            'Ok' : IDL.Vec(
              IDL.Record({
                'id' : IDL.Text,
                'liquorProductId' : IDL.Text,
                'salesStaffId' : IDL.Text,
                'customerAge' : IDL.Nat64,
                'buyerId' : IDL.Text,
                'quantity' : IDL.Nat64,
                'costPrice' : IDL.Nat64,
                'totalPrice' : IDL.Nat64,
                'saleDate' : IDL.Text,
              })
            ),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'listSupplyChainEvents' : IDL.Func(
        [],
        [
          IDL.Variant({
            'Ok' : IDL.Vec(
              IDL.Record({
                'id' : IDL.Text,
                'liquorProductId' : IDL.Text,
                'date' : IDL.Nat64,
                'participantId' : IDL.Text,
                'quantity' : IDL.Nat64,
                'location' : IDL.Text,
                'eventType' : IDL.Variant({
                  'Sold' : IDL.Null,
                  'Received' : IDL.Null,
                  'Adjusted' : IDL.Null,
                  'Damaged' : IDL.Null,
                  'Expired' : IDL.Null,
                }),
              })
            ),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        ['query'],
      ),
    'logSupplyChainEvent' : IDL.Func(
        [
          IDL.Record({
            'liquorProductId' : IDL.Text,
            'participantId' : IDL.Text,
            'quantity' : IDL.Nat64,
            'location' : IDL.Text,
            'eventType' : IDL.Variant({
              'Sold' : IDL.Null,
              'Received' : IDL.Null,
              'Adjusted' : IDL.Null,
              'Damaged' : IDL.Null,
              'Expired' : IDL.Null,
            }),
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Text,
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'registerUser' : IDL.Func(
        [
          IDL.Record({
            'contactInfo' : IDL.Text,
            'username' : IDL.Text,
            'role' : IDL.Variant({
              'Customer' : IDL.Null,
              'Staff' : IDL.Null,
              'Admin' : IDL.Null,
              'Manager' : IDL.Null,
            }),
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'contactInfo' : IDL.Text,
              'username' : IDL.Text,
              'owner' : IDL.Principal,
              'createdAt' : IDL.Text,
              'role' : IDL.Variant({
                'Customer' : IDL.Null,
                'Staff' : IDL.Null,
                'Admin' : IDL.Null,
                'Manager' : IDL.Null,
              }),
              'lastUpdated' : IDL.Text,
              'points' : IDL.Nat64,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'sellLiquorProduct' : IDL.Func(
        [
          IDL.Record({
            'liquorProductId' : IDL.Text,
            'salesStaffId' : IDL.Text,
            'customerAge' : IDL.Nat64,
            'buyerId' : IDL.Text,
            'quantity' : IDL.Nat64,
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'liquorProductId' : IDL.Text,
              'salesStaffId' : IDL.Text,
              'customerAge' : IDL.Nat64,
              'buyerId' : IDL.Text,
              'quantity' : IDL.Nat64,
              'costPrice' : IDL.Nat64,
              'totalPrice' : IDL.Nat64,
              'saleDate' : IDL.Text,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'updateLiquorProduct' : IDL.Func(
        [
          IDL.Text,
          IDL.Record({
            'retailPrice' : IDL.Nat64,
            'alcoholContent' : IDL.Nat64,
            'liquorType' : IDL.Variant({
              'Gin' : IDL.Null,
              'Rum' : IDL.Null,
              'Brandy' : IDL.Null,
              'Tequila' : IDL.Null,
              'Whiskey' : IDL.Null,
              'Liqueur' : IDL.Null,
              'Other' : IDL.Null,
              'Vodka' : IDL.Null,
            }),
            'vintageYear' : IDL.Opt(IDL.Text),
            'expiryDate' : IDL.Opt(IDL.Text),
            'name' : IDL.Text,
            'bottleSize' : IDL.Text,
            'batchNumber' : IDL.Text,
            'brand' : IDL.Variant({
              'County' : IDL.Null,
              'JackDaniels' : IDL.Null,
              'JohnnieWalker' : IDL.Null,
              'Hennessy' : IDL.Null,
              'Patron' : IDL.Null,
              'Smirnoff' : IDL.Null,
              'Best' : IDL.Null,
              'Tanqueray' : IDL.Null,
              'Bacardi' : IDL.Null,
              'Other' : IDL.Null,
              'Chrome' : IDL.Null,
            }),
            'currentStock' : IDL.Nat64,
            'costPrice' : IDL.Nat64,
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'retailPrice' : IDL.Nat64,
              'alcoholContent' : IDL.Nat64,
              'liquorType' : IDL.Variant({
                'Gin' : IDL.Null,
                'Rum' : IDL.Null,
                'Brandy' : IDL.Null,
                'Tequila' : IDL.Null,
                'Whiskey' : IDL.Null,
                'Liqueur' : IDL.Null,
                'Other' : IDL.Null,
                'Vodka' : IDL.Null,
              }),
              'vintageYear' : IDL.Opt(IDL.Text),
              'expiryDate' : IDL.Opt(IDL.Text),
              'name' : IDL.Text,
              'bottleSize' : IDL.Text,
              'batchNumber' : IDL.Text,
              'brand' : IDL.Variant({
                'County' : IDL.Null,
                'JackDaniels' : IDL.Null,
                'JohnnieWalker' : IDL.Null,
                'Hennessy' : IDL.Null,
                'Patron' : IDL.Null,
                'Smirnoff' : IDL.Null,
                'Best' : IDL.Null,
                'Tanqueray' : IDL.Null,
                'Bacardi' : IDL.Null,
                'Other' : IDL.Null,
                'Chrome' : IDL.Null,
              }),
              'currentStock' : IDL.Nat64,
              'costPrice' : IDL.Nat64,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
    'updateUser' : IDL.Func(
        [
          IDL.Text,
          IDL.Record({
            'contactInfo' : IDL.Text,
            'username' : IDL.Text,
            'role' : IDL.Variant({
              'Customer' : IDL.Null,
              'Staff' : IDL.Null,
              'Admin' : IDL.Null,
              'Manager' : IDL.Null,
            }),
          }),
        ],
        [
          IDL.Variant({
            'Ok' : IDL.Record({
              'id' : IDL.Text,
              'contactInfo' : IDL.Text,
              'username' : IDL.Text,
              'owner' : IDL.Principal,
              'createdAt' : IDL.Text,
              'role' : IDL.Variant({
                'Customer' : IDL.Null,
                'Staff' : IDL.Null,
                'Admin' : IDL.Null,
                'Manager' : IDL.Null,
              }),
              'lastUpdated' : IDL.Text,
              'points' : IDL.Nat64,
            }),
            'Err' : IDL.Variant({
              'UserAlreadyExists' : IDL.Text,
              'AgeRestriction' : IDL.Text,
              'ProductDoesNotExist' : IDL.Text,
              'InvalidPayload' : IDL.Text,
              'SystemError' : IDL.Text,
              'InsufficientStock' : IDL.Text,
              'Unauthorized' : IDL.Text,
              'UserDoesNotExist' : IDL.Text,
              'ProductAlreadyExists' : IDL.Text,
            }),
          }),
        ],
        [],
      ),
  });
};
export const init = ({ IDL }) => { return []; };
