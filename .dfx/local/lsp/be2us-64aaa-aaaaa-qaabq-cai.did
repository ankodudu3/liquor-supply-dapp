service : {
  addLiquorProduct : (
      record {
        retailPrice : nat64;
        alcoholContent : nat64;
        liquorType : variant {
          Gin;
          Rum;
          Brandy;
          Tequila;
          Whiskey;
          Liqueur;
          Other;
          Vodka;
        };
        vintageYear : opt text;
        expiryDate : opt text;
        name : text;
        bottleSize : text;
        batchNumber : text;
        brand : variant {
          County;
          JackDaniels;
          JohnnieWalker;
          Hennessy;
          Patron;
          Smirnoff;
          Best;
          Tanqueray;
          Bacardi;
          Other;
          Chrome;
        };
        currentStock : nat64;
        costPrice : nat64;
      },
    ) -> (
      variant {
        Ok : record {
          id : text;
          retailPrice : nat64;
          alcoholContent : nat64;
          liquorType : variant {
            Gin;
            Rum;
            Brandy;
            Tequila;
            Whiskey;
            Liqueur;
            Other;
            Vodka;
          };
          vintageYear : opt text;
          expiryDate : opt text;
          name : text;
          bottleSize : text;
          batchNumber : text;
          brand : variant {
            County;
            JackDaniels;
            JohnnieWalker;
            Hennessy;
            Patron;
            Smirnoff;
            Best;
            Tanqueray;
            Bacardi;
            Other;
            Chrome;
          };
          currentStock : nat64;
          costPrice : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  adjustInventory : (
      record {
        liquorProductId : text;
        staffId : text;
        quantityChanged : nat64;
        adjustedBy : text;
        reason : text;
      },
    ) -> (
      variant {
        Ok : record {
          id : text;
          liquorProductId : text;
          staffId : text;
          adjustmentDate : text;
          quantityChanged : nat64;
          reason : text;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  deleteLiquorProduct : (text) -> (
      variant {
        Ok : text;
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  deleteUser : (text) -> (
      variant {
        Ok : text;
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  getAllUsers : (record { page : nat64; pageSize : nat64 }) -> (
      variant {
        Ok : vec record {
          id : text;
          contactInfo : text;
          username : text;
          owner : principal;
          createdAt : text;
          role : variant { Customer; Staff; Admin; Manager };
          lastUpdated : text;
          points : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  getLiquorProduct : (text) -> (
      variant {
        Ok : record {
          id : text;
          retailPrice : nat64;
          alcoholContent : nat64;
          liquorType : variant {
            Gin;
            Rum;
            Brandy;
            Tequila;
            Whiskey;
            Liqueur;
            Other;
            Vodka;
          };
          vintageYear : opt text;
          expiryDate : opt text;
          name : text;
          bottleSize : text;
          batchNumber : text;
          brand : variant {
            County;
            JackDaniels;
            JohnnieWalker;
            Hennessy;
            Patron;
            Smirnoff;
            Best;
            Tanqueray;
            Bacardi;
            Other;
            Chrome;
          };
          currentStock : nat64;
          costPrice : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  getLiquorProductsByType : (
      variant { Gin; Rum; Brandy; Tequila; Whiskey; Liqueur; Other; Vodka },
    ) -> (
      variant {
        Ok : vec record {
          id : text;
          retailPrice : nat64;
          alcoholContent : nat64;
          liquorType : variant {
            Gin;
            Rum;
            Brandy;
            Tequila;
            Whiskey;
            Liqueur;
            Other;
            Vodka;
          };
          vintageYear : opt text;
          expiryDate : opt text;
          name : text;
          bottleSize : text;
          batchNumber : text;
          brand : variant {
            County;
            JackDaniels;
            JohnnieWalker;
            Hennessy;
            Patron;
            Smirnoff;
            Best;
            Tanqueray;
            Bacardi;
            Other;
            Chrome;
          };
          currentStock : nat64;
          costPrice : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  getSupplyChainEvent : (text) -> (
      variant {
        Ok : record {
          id : text;
          liquorProductId : text;
          date : nat64;
          participantId : text;
          quantity : nat64;
          location : text;
          eventType : variant { Sold; Received; Adjusted; Damaged; Expired };
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  getUser : (text) -> (
      variant {
        Ok : record {
          id : text;
          contactInfo : text;
          username : text;
          owner : principal;
          createdAt : text;
          role : variant { Customer; Staff; Admin; Manager };
          lastUpdated : text;
          points : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  listAllInventoryAdjustments : () -> (
      variant {
        Ok : vec record {
          id : text;
          liquorProductId : text;
          staffId : text;
          adjustmentDate : text;
          quantityChanged : nat64;
          reason : text;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  listAllProducts : () -> (
      variant {
        Ok : vec record {
          id : text;
          retailPrice : nat64;
          alcoholContent : nat64;
          liquorType : variant {
            Gin;
            Rum;
            Brandy;
            Tequila;
            Whiskey;
            Liqueur;
            Other;
            Vodka;
          };
          vintageYear : opt text;
          expiryDate : opt text;
          name : text;
          bottleSize : text;
          batchNumber : text;
          brand : variant {
            County;
            JackDaniels;
            JohnnieWalker;
            Hennessy;
            Patron;
            Smirnoff;
            Best;
            Tanqueray;
            Bacardi;
            Other;
            Chrome;
          };
          currentStock : nat64;
          costPrice : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  listAllSales : () -> (
      variant {
        Ok : vec record {
          id : text;
          liquorProductId : text;
          salesStaffId : text;
          customerAge : nat64;
          buyerId : text;
          quantity : nat64;
          costPrice : nat64;
          totalPrice : nat64;
          saleDate : text;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  listSupplyChainEvents : () -> (
      variant {
        Ok : vec record {
          id : text;
          liquorProductId : text;
          date : nat64;
          participantId : text;
          quantity : nat64;
          location : text;
          eventType : variant { Sold; Received; Adjusted; Damaged; Expired };
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    ) query;
  logSupplyChainEvent : (
      record {
        liquorProductId : text;
        participantId : text;
        quantity : nat64;
        location : text;
        eventType : variant { Sold; Received; Adjusted; Damaged; Expired };
      },
    ) -> (
      variant {
        Ok : text;
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  registerUser : (
      record {
        contactInfo : text;
        username : text;
        role : variant { Customer; Staff; Admin; Manager };
      },
    ) -> (
      variant {
        Ok : record {
          id : text;
          contactInfo : text;
          username : text;
          owner : principal;
          createdAt : text;
          role : variant { Customer; Staff; Admin; Manager };
          lastUpdated : text;
          points : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  sellLiquorProduct : (
      record {
        liquorProductId : text;
        salesStaffId : text;
        customerAge : nat64;
        buyerId : text;
        quantity : nat64;
      },
    ) -> (
      variant {
        Ok : record {
          id : text;
          liquorProductId : text;
          salesStaffId : text;
          customerAge : nat64;
          buyerId : text;
          quantity : nat64;
          costPrice : nat64;
          totalPrice : nat64;
          saleDate : text;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  updateLiquorProduct : (
      text,
      record {
        retailPrice : nat64;
        alcoholContent : nat64;
        liquorType : variant {
          Gin;
          Rum;
          Brandy;
          Tequila;
          Whiskey;
          Liqueur;
          Other;
          Vodka;
        };
        vintageYear : opt text;
        expiryDate : opt text;
        name : text;
        bottleSize : text;
        batchNumber : text;
        brand : variant {
          County;
          JackDaniels;
          JohnnieWalker;
          Hennessy;
          Patron;
          Smirnoff;
          Best;
          Tanqueray;
          Bacardi;
          Other;
          Chrome;
        };
        currentStock : nat64;
        costPrice : nat64;
      },
    ) -> (
      variant {
        Ok : record {
          id : text;
          retailPrice : nat64;
          alcoholContent : nat64;
          liquorType : variant {
            Gin;
            Rum;
            Brandy;
            Tequila;
            Whiskey;
            Liqueur;
            Other;
            Vodka;
          };
          vintageYear : opt text;
          expiryDate : opt text;
          name : text;
          bottleSize : text;
          batchNumber : text;
          brand : variant {
            County;
            JackDaniels;
            JohnnieWalker;
            Hennessy;
            Patron;
            Smirnoff;
            Best;
            Tanqueray;
            Bacardi;
            Other;
            Chrome;
          };
          currentStock : nat64;
          costPrice : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
  updateUser : (
      text,
      record {
        contactInfo : text;
        username : text;
        role : variant { Customer; Staff; Admin; Manager };
      },
    ) -> (
      variant {
        Ok : record {
          id : text;
          contactInfo : text;
          username : text;
          owner : principal;
          createdAt : text;
          role : variant { Customer; Staff; Admin; Manager };
          lastUpdated : text;
          points : nat64;
        };
        Err : variant {
          UserAlreadyExists : text;
          AgeRestriction : text;
          ProductDoesNotExist : text;
          InvalidPayload : text;
          SystemError : text;
          InsufficientStock : text;
          Unauthorized : text;
          UserDoesNotExist : text;
          ProductAlreadyExists : text;
        };
      },
    );
}